/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feedbackmaintainer2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CS
 */
public class studeninterface extends javax.swing.JFrame {

    /**
     * Creates new form studeninterface
     */
    public studeninterface() {
        initComponents();
 //Constructor called fro course through databaseS
 
 
 // JOptionPane.showMessageDialog(rootPane, "hello3");
        String url="jdbc:mysql://localhost/feedback";
try
{
    Connection myconn =DriverManager.getConnection(url, "root", "");
try
{  
    String q1="select * from addcourse";
    PreparedStatement state2=myconn.prepareStatement(q1);
    ResultSet res2=state2.executeQuery();
    while(res2.next())
    {
         jComboBox2.addItem(res2.getString("name"));
    }
/*vstate2
if(jComboBox2.getItemCount()==1)
{
    jComboBox2.removeAllItems();
    jComboBox2.addItem("no course available");
}*/
   
}
                 catch(SQLException e)
                    {
              JOptionPane.showMessageDialog(rootPane, "Error in Query"+e.getMessage());
                    } 
            finally
            {
                myconn.close();
            }
}
catch(Exception e)
{
   JOptionPane.showMessageDialog(rootPane, "Error in connection"+e.getMessage());  
}

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(419, 170, 180, 38);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose course" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(60, 170, 149, 38);

        jLabel1.setText("CHOOSE TEACHER");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(450, 120, 150, 30);

        jLabel2.setText("CHOOSE COURSE");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 120, 150, 30);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Excellent");
        getContentPane().add(jRadioButton1);
        jRadioButton1.setBounds(60, 270, 90, 30);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("GOOD");
        getContentPane().add(jRadioButton2);
        jRadioButton2.setBounds(190, 270, 100, 30);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("AVERAGE");
        getContentPane().add(jRadioButton3);
        jRadioButton3.setBounds(320, 270, 90, 30);

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("POOR");
        getContentPane().add(jRadioButton4);
        jRadioButton4.setBounds(460, 270, 90, 30);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(220, 170, 80, 40);

        jButton2.setText("SUBMIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(450, 390, 130, 30);

        jButton3.setText("LOGOUT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(70, 390, 100, 30);

        setBounds(0, 0, 679, 551);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
   
       
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

jComboBox1.removeAllItems();
        String url="jdbc:mysql://localhost/feedback";
try
{
    Connection myconn =DriverManager.getConnection(url, "root", "");
try
{  
    String q1="select * from courseteacher where cname=?";
    PreparedStatement state2=myconn.prepareStatement(q1);
    state2.setString(1, jComboBox2.getSelectedItem().toString());
    ResultSet res2=state2.executeQuery();
while(res2.next())
{
     jComboBox1.addItem(res2.getString("tname"));
}/*
if(jComboBox1.getItemCount()==1)
{
    jComboBox2.removeAllItems();
    jComboBox2.addItem("no teacher available");
}*/
   
}
                 catch(SQLException e)
                    {
              JOptionPane.showMessageDialog(rootPane, "Error in Query"+e.getMessage());
                    } 
            finally
            {
                myconn.close();
            }
}
catch(Exception e)
{
   JOptionPane.showMessageDialog(rootPane, "Error in connection"+e.getMessage());  
} // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           System.out.println("1.hhgi");
         String url="jdbc:mysql://localhost/feedback";
        try
        {
            Connection myconn=DriverManager.getConnection(url, "root", "");
            try
            {
                
                String u="select * from checkfgiven where studentid=? and cname=? and tname=? ";
                PreparedStatement state3=myconn.prepareStatement(u);
                state3.setString(1,loginstudent.studentid);
                state3.setString(2,jComboBox2.getSelectedItem().toString());
                state3.setString(3,jComboBox1.getSelectedItem().toString());
                ResultSet re=state3.executeQuery();
                if(re.next())
                {
                JOptionPane.showMessageDialog(rootPane,"Stdent already given feedback for course-teacher pair");
                new studeninterface().setVisible(true);
                this.dispose();
                }
                else
                {
                       System.out.println("2.hhgi");
                String q="select * from tfeedback where cname=? and tname=?";
             
                PreparedStatement state=myconn.prepareStatement(q);
                String course=jComboBox2.getSelectedItem().toString();
                String teacher=jComboBox1.getSelectedItem().toString();
                state.setString(1, course);
                state.setString(2, teacher);
                
                
                ResultSet res=state.executeQuery();
                if(res.next())
                {
                       System.out.println("3.hhgi");
                    int no=res.getInt("no");
                    int e=res.getInt("excellent");
                    int g=res.getInt("good");
                    int a=res.getInt("average");
                    int p=res.getInt("poor");
                 
                 
                          no=no+1;
                        if(jRadioButton1.isSelected())
                        {
                            e++;
                        }
                       
                       else if(jRadioButton2.isSelected())
                        {
                           g++;
                        }
                       
                       else if(jRadioButton3.isSelected())
                        {
                           a++;
                        }

                        else  if(jRadioButton4.isSelected())
                        {
                            p++;
                        }
                       int per=((e*4+g*3+a*2+p*1)*100)/(4*no);

                   //Update query to change in database
                    
        String url3="jdbc:mysql://localhost/feedback";
        try
        {
            Connection myconn3 =DriverManager.getConnection(url, "root", "");
            try
            {

                String q3="update tfeedback set no=?,excellent=?,good=?,average=?,poor=?,percentage=? where cname=? && tname=?";
                PreparedStatement state4=myconn.prepareStatement(q3);
             
               
                state4.setString(1,String.valueOf(no));
                state4.setString(2,String.valueOf(e));
                state4.setString(3,String.valueOf(g));
                state4.setString(4,String.valueOf(a));
                state4.setString(5,String.valueOf(p));
                
                state4.setString(6,String.valueOf(per));
                
                state4.setString(7,course);
                state4.setString(8,teacher);
                //System.out.println(no+" "+e+" "+g+" "+a+" "+p+" "+per);
                int res3=state4.executeUpdate();
                if(res3>0)
                {
                    
                   // JOptionPane.showMessageDialog(rootPane, "Feedback Added Succesfully");
                  
                     System.out.println("hhgi");
                   String ur="jdbc:mysql://localhost/feedback";
                   try
                   {
                       Connection myconn7 =DriverManager.getConnection(ur, "root", "");
                     try
                      {
                         String qw="insert into checkfgiven values(?,?,?)";
                         PreparedStatement state8=myconn7.prepareStatement(qw);
                          state8.setString(1,loginstudent.studentid);
                          state8.setString(2,jComboBox2.getSelectedItem().toString());
                          state8.setString(3,jComboBox1.getSelectedItem().toString());
                           int resr=state8.executeUpdate();
                           if(resr>0)
                           {
                            JOptionPane.showMessageDialog(rootPane, "Feedback given Succesfully");
                    
                           }
                           else
                           {
                            JOptionPane.showMessageDialog(rootPane, "Feedback not given Succesfully");
                   
                            }
                     }
                             catch(Exception d)
                           {
                              JOptionPane.showMessageDialog(rootPane, "error in query"+d.getMessage());
                           }
                              finally
                              {
                             myconn7.close();
                             jComboBox1.removeAllItems();
                    buttonGroup1.clearSelection();
                              }
                           }
                           catch(SQLException d)
                            {
                             JOptionPane.showMessageDialog(rootPane, "error in connection"+d.getMessage());
                            }
                   System.out.println("hi");
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Feedback Not Added Succesfully");
                    }

                }
                catch(SQLException e1)
                {
                    JOptionPane.showMessageDialog(rootPane, "teacher not availableji"+e1.getMessage());
                }
                finally
                {
                    myconn3.close();
                }
            }
            catch(Exception e2)
            {
                JOptionPane.showMessageDialog(rootPane, "error in connection"+e2.getMessage());
            }
            }
               
                
                //else part if first time
                
                
                
                else
                { 
                     System.out.println("4..hhgi");
                    String url2="jdbc:mysql://localhost/feedback";
                try
                {
                    Connection myconn2 =DriverManager.getConnection(url, "root", "");
                    try
                    {

                        String q2="insert into tfeedback values(?,?,?,?,?,?,?,?)";
                        PreparedStatement state2=myconn.prepareStatement(q2);

                    
                        
                        state2.setString(1, "1");
                        state2.setString(2, jComboBox2.getSelectedItem().toString());
                        state2.setString(3, jComboBox1.getSelectedItem().toString());
                       //percentage calculate first time 
                       int total=0;
                        if(jRadioButton1.isSelected())
                        {
                            state2.setString(4,"1");
                            total=total+1*4;
                        }
                        else
                        {
                            state2.setString(4,"0");
                            
                        }
                        
                        
                        if(jRadioButton2.isSelected())
                        {
                            state2.setString(5,"1");
                            total=total+1*3;
                        }
                        else
                        {
                            state2.setString(5,"0");
                        }

                        if(jRadioButton3.isSelected())
                        {
                            state2.setString(6,"1");
                            total=total+1*2;
                        }
                        else
                        {
                            state2.setString(6,"0");
                        }

                        if(jRadioButton4.isSelected())
                        {
                            state2.setString(7,"1");
                            total=total+1*1;
                        }
                        else
                        {
                            state2.setString(7,"0");
                        }

total=(total/4)*100;
state2.setString(8,String.valueOf(total));

                        int res2=state2.executeUpdate();
                        if(res2>0)
                        {
                             System.out.println("5..hhgi");
                           // JOptionPane.showMessageDialog(rootPane, "Feedback Added Succesfully");
                        
                             
                             String ur="jdbc:mysql://localhost/feedback";
                   try
                   {
                       Connection myconn5 =DriverManager.getConnection(ur, "root", "");
                     try
                      {
                         String qe="insert into checkfgiven values(?,?,?)";
                         PreparedStatement state6=myconn5.prepareStatement(qe);
                          state6.setString(1,loginstudent.studentid);
                          state6.setString(2,jComboBox2.getSelectedItem().toString());
                          state6.setString(3,jComboBox1.getSelectedItem().toString());
                           int resw=state6.executeUpdate();
                           if(resw>0)
                           {
                            JOptionPane.showMessageDialog(rootPane, "Feedback given Succesfully");
                    
                           }
                           else
                           {
                            JOptionPane.showMessageDialog(rootPane, "Feedback not given Succesfully");
                   
                            }
                     }
                             catch(Exception e)
                           {
                              JOptionPane.showMessageDialog(rootPane, "error in querypo"+e.getMessage());
                           }
                              finally
                              {
                             myconn5.close();
                                 jComboBox1.removeAllItems();
                            buttonGroup1.clearSelection();
                              }
                           }
                           catch(SQLException e)
                            {
                             JOptionPane.showMessageDialog(rootPane, "error in connection"+e.getMessage());
                            }

                        }
                        else
                        {
                           JOptionPane.showMessageDialog(rootPane, "Feedback not Added Succesfully");
                            jComboBox1.removeAllItems();
                            
                            buttonGroup1.clearSelection();
                        }

                    }

                    catch(SQLException e)
                    {
                        JOptionPane.showMessageDialog(rootPane, "there is no teacher available");
                    }
                    finally
                    {
                        myconn2.close();
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "error in connection"+e.getMessage());
                }
                }
            }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "there is no teacher available");
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection"+e.getMessage());
        }

    //    khgfjskbfljs
       
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
new mainframe().setVisible(true);
                    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(studeninterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(studeninterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(studeninterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(studeninterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new studeninterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    // End of variables declaration//GEN-END:variables
}
